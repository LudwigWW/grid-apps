"use strict";var gs_base_polygons=exports;!function(){if(self.base||(self.base={}),!self.base.polygons){var e=self.base,n=e.util,r=e.config,t=Math.PI/180,l=Math.abs,i=Math.sqrt,o=n.sqr,p=e.key.NONE,f=e.newPoint;e.polygons={trace2count:function e(n,r,t,l,i,o,p){if(0===l)return void(o&&o.append(n));var f,u=0===i&&o?t/2:t,a=n.offset(u,[]),s=[];if(0===a.length)return void(o&&o.append(n));n.inner&&n.inner.forEach(function(e){e.offset(-u,s)});var c=[];y(a,s,c,[],n.getZ());if(c.length>0){if(r.appendAll(c),0===i&&p&&p.appendAll(c),l>0)for(f=0;f<c.length;f++)e(c[f],r,t,l-1,i+1,o)}else o&&o.append(n)},rayIntersect:function(r,t,i,o){var p=0,f=[],u=[],a=e.config,s=o?a.precision_fill_merge:a.precision_merge;i.forEach(function(e){e.flattenTo(f)}),i=f;for(;p<i.length;)for(var c=i[p++],d=c.points,h=d.length,g=e.debug,y=!1,C=0;C<h;C++){var v=(C+1)%h,m=n.intersectRayLine(r,t,d[C],d[v]);m&&(m.group=c,u.push(m),m.isNear(d[C],s)?(m.pos=C,m.mod=h,y&&g.points([m],255,.5,1)):m.isNear(d[v],s)?(m.pos=v,m.mod=h,y&&g.points([m],65535,.5,.85)):y&&g.points([m],16711935,.5,.5))}if(u.length>0){var P,E,b=!1;if(u.sort(function(e,l){if(!e.del&&!l.del&&e.isNear(l,s)){var i=[];e.isNear(e.p1,s)||i.push(e.p1),e.isNear(e.p2,s)||i.push(e.p2),l.isNear(l.p1,s)||i.push(l.p1),l.isNear(l.p2,s)||i.push(l.p2),i.length<2?g.log("sliceInt: line common ep fail: "+i.length):i.length>2?(e.del=!0,l.del=!0):n.intersectRayLine(r,t,i[0],i[1])?(b=!0,e.del=!0,y&&g.points([e],16776960,.2,.85)):(b=!0,e.del=!0,l.del=!0,y&&g.points([e,l],16777215,.2,1))}return e.dist-l.dist}),o)for(p=0,h=u.length;p<h;){for(P=u[p++];P&&P.del&&p<h;)P=u[p++];for(E=u[p++];E&&E.del&&p<h;)E=u[p++];if(P&&E&&P.group&&P.group){var T=P.group,x=E.group,w=(T.depth,T===x);if(T.depth===x.depth&&w&&P.mod&&E.mod){var A=l(P.pos-E.pos);1!==A&&A!==P.mod-1||(P.del=!0,E.del=!0,b=!0,y&&g.points([P,E],16777215,.2,1.85))}}}if(b){var _=[];for(p=0;p<u.length;p++){var N=u[p];N.del||_.push(N)}u=_}}return u},alignWindings:h,setWinding:d,fillArea:function(n,r,a,s,c,d){if(0===n.length)return;var h,g=1,y=n[0],C=y.getZ(),v=y.bounds.clone();r%=180;for(;r>90;)r-=180;h=e.newSlope(0,0,Math.cos(r*t)*a,Math.sin(r*t)*a);for(;g<n.length;)v.merge(n[g++].bounds);var m=s||[],P=-h.dy,E=h.dx,b=l(l(P)>0?v.width()/P:0),T=l(l(E)>0?v.height()/E:0),x=i(o(b*P)+o(T*E)),w=i(o(P)+o(E)),A=x/w,_=r<0?{x:v.minx,y:v.miny,z:C}:{x:v.maxx,y:v.miny,z:C},N=self.ClipperLib,M=N.ClipType,O=N.PolyType,S=N.PolyFillType,L=new N.Clipper,k=new N.PolyTree,I=e.config.clipper*(c||0),j=e.config.clipper*(d||0),Z=[];for(m.origin=f(_.x,_.y,_.z),g=0;g<A;g++){var F=f(_.x-1e3*h.dx,_.y-1e3*h.dy,C,p),D=f(_.x+1e3*h.dx,_.y+1e3*h.dy,C,p);Z.push([F,D]),_.x+=P,_.y+=E}L.AddPaths(Z,O.ptSubject,!1),L.AddPaths(u(n),O.ptClip,!0),Z=[],L.Execute(M.ctIntersection,k,S.pftNonZero,S.pftEvenOdd)&&k.m_AllPolys.forEach(function(e){if(I||j){var n=N.JS.PerimeterOfPath(e.m_polygon,!1,1);if(I&&n<I)return;if(j&&n>j)return}var r=f(null,null,C,null,e.m_polygon[0]),t=f(null,null,C,null,e.m_polygon[1]),l=m.origin.distToLineNew(r,t)/a;Z.push([r,t,l])});return Z.sort(function(e,n){return e[2]-n[2]}),Z.forEach(function(e){var n=Math.round(e[2]);e[0].index=n,e[1].index=n,m.push(e[0]),m.push(e[1])}),m},subtract:y,flatten:g,trimTo:function(e,r){if(e===r||null===e||null===r)return null;var t,l=[];return n.doCombinations(e,r,{},function(e,n){(t=e.mask(n))&&l.appendAll(t)}),l},expand2:function e(n,t,l,i,o,p,f,u){h(n);n.forEach(function(e){e.inner&&d(e.inner,!e.isClockwise())});var a=r.clipper,c=self.ClipperLib,g=c.Clipper,y=c.PolyFillType,v=c.JoinType,m=c.EndType,P=new c.ClipperOffset,E=new c.PolyTree,b=n,T=.45*t;n.forEach(function(e){var n=g.CleanPolygons(e.toClipper(),r.clipperClean),t=g.SimplifyPolygons(n,y.pftNonZero);P.AddPaths(t,v.jtMiter,m.etClosedPolygon)});P.Execute(E,(t+T)*a);n=s(E,u);P=new c.ClipperOffset;E=new c.PolyTree;n.forEach(function(e){var n=g.CleanPolygons(e.toClipper(),r.clipperClean),t=g.SimplifyPolygons(n,y.pftNonZero);P.AddPaths(t,v.jtMiter,m.etClosedPolygon)});P.Execute(E,-T*a);n=s(E,u);if(f){var x=C(b),w=C(n),A=Math.abs(1-x/w);A>.2&&f(b,i.length?n:null,A,-T)}i&&i.appendAll(n);p&&p(n,o);(0===o||o>1)&&n.length>0&&e(n,l||t,l,i,o>0?o-1:0,p,f,u);return n},expand:function e(n,t,l,i,o,p,f,u){h(n);n.forEach(function(e){e.inner&&d(e.inner,!e.isClockwise())});var a=r.clipper,c=self.ClipperLib,g=c.Clipper,y=c.PolyFillType,v=c.JoinType,m=c.EndType,P=new c.ClipperOffset,E=new c.PolyTree;C(n);n.forEach(function(e){var n=g.CleanPolygons(e.toClipper(),r.clipperClean),t=g.SimplifyPolygons(n,y.pftNonZero);P.AddPaths(t,v.jtMiter,m.etClosedPolygon)});P.Execute(E,t*a);n=s(E,l,null,null,u);i&&i.appendAll(n);f&&f(n,o);(0===o||o>1)&&n.length>0&&e(n,p||t,l,i,o>0?o-1:0,p,f);return n},union:function(e,n){if(e.length<2)return e;var r,t,l,i=e.slice(),o=[];e:for(r=0;r<i.length;r++)if(i[r])for(t=r+1;t<i.length;t++)if(i[t]&&(l=i[r].union(i[t],n))){i[r]=null,i[t]=null,i.push(l);continue e}for(r=0;r<i.length;r++)i[r]&&o.push(i[r]);return o},nest:function(e,n,r){if(!e)return e;var t,l;for(e.sort(function(e,n){return e.area()-n.area()}),t=0;t<e.length;t++)(l=e[t]).parent=null,l.inner=null;for(t=0;t<e.length-1;t++){l=e[t];for(var i=t+1;i<e.length;i++){var o=e[i];if((!r||!o.isOpen())&&l.isNested(o)){o.addInner(l);break}}}var p,f=[];for(t=0;t<e.length;t++){for(p=e[t],(l=p).depth=0;p.parent;)l.depth++,p=p.parent;n?0===l.depth&&f.push(l):l.depth%2==0?f.push(l):l.inner=null}return f},diff:function(e,n,r){var t=self.ClipperLib,l=t.ClipType,i=t.PolyType,o=t.PolyFillType,p=new t.Clipper,f=new t.PolyTree,a=u(e),c=u(n);return p.AddPaths(a,i.ptSubject,!0),p.AddPaths(c,i.ptClip,!0),p.Execute(l.ctDifference,f,o.pftEvenOdd,o.pftEvenOdd)?s(f,r):null},filter:function(e,n,r){return e.forEach(function(e){(e=r(e))&&(Array.isArray(e)?n.appendAll(e):n.push(e))}),n},toClipper:u,fromClipperNode:a,fromClipperTree:s,fromClipperTreeUnion:function e(n,r,t,l,i){let o,p=l||[];n.m_Childs.forEach(function(n){o=a(n,r),t&&o.area()<t||(i?i.addInner(o):p.push(o),n.m_Childs&&e(n,r,t,p,i?null:o))});return p},cleanClipperTree:c,fingerprintCompare:function(e,n){if(e===n)return!0;if(!e||!n)return!1;if(e.length!==n.length)return!1;for(let r=0;r<e.length;r+=3){if(Math.abs(e[r]-n[r])>.001)return!1;if(Math.abs(e[r+1]-n[r+1])>1e-4)return!1;if(Math.abs(e[r+2].centerx()-n[r+2].centerx())>1e-4)return!1;if(Math.abs(e[r+2].centery()-n[r+2].centery())>1e-4)return!1}return!0},fingerprint:function(e){let n=[];return g(e).sort((e,n)=>e.area()>n.area()).forEach(e=>{n.push(e.area()),n.push(e.perimeter()),n.push(e.bounds)}),n}}}function u(e,n){var r=[];return e.forEach(function(e){e.toClipper(r,n)}),r}function a(n,r){var t=e.newPolygon();return n.m_polygon.forEach(function(e){t.push(f(null,null,r,null,e))}),t.open=n.IsOpen,t}function s(e,n,r,t,l){var i,o=r||[],p=l||.1;return e.m_Childs.forEach(function(e){(i=a(e,n)).area()<p||(t?t.addInner(i):o.push(i),e.m_Childs&&s(e,n,o,t?null:i,l))}),o}function c(e){var n=self.ClipperLib.Clipper;return e.m_Childs&&e.m_Childs.forEach(function(e){e.m_polygon=n.CleanPolygon(e.m_polygon,r.clipperClean),c(e.m_Childs)}),e}function d(e,n,r){if(e)for(var t,l=0;l<e.length;)(t=e[l++]).isClockwise()!==n&&t.reverse(),r&&t.inner&&d(t.inner,!n,!1)}function h(e){for(var n,r,t=e.length,l=0,i=0,o=0;o<t;)i+=(r=e[o++]).length,r.isClockwise()&&(l+=r.length);for(o=0,n=l>i/2;o<t;)(r=e[o++]).isClockwise()!=n&&r.reverse();return n}function g(e,n,r){return n||(n=[]),e.forEach(function(e){e.flattenTo(n),r&&(e.inner=null)}),n}function y(e,n,r,t,l,i){var o=self.ClipperLib,p=o.ClipType,f=o.PolyType,a=o.PolyFillType,d=new o.Clipper,h=new o.PolyTree,g=u(e),y=u(n),C=i||.1,v=[];function m(e,n){e.forEach(function(e){e.area()>=C&&(n.push(e),v.push(e))})}return d.StrictlySimple=!0,r&&(d.AddPaths(g,f.ptSubject,!0),d.AddPaths(y,f.ptClip,!0),d.Execute(p.ctDifference,h,a.pftEvenOdd,a.pftEvenOdd)&&(c(h),m(s(h,l,null,null,C),r))),t&&(r&&(h.Clear(),d.Clear()),d.AddPaths(y,f.ptSubject,!0),d.AddPaths(g,f.ptClip,!0),d.Execute(p.ctDifference,h,a.pftEvenOdd,a.pftEvenOdd)&&(c(h),m(s(h,l,null,null,C),t))),v}function C(e){var n=0;return e.forEach(function(e){n+=e.circularityDeep()}),n}}();