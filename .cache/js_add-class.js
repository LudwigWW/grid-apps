class DataWriter{constructor(t,s){this.view=t,this.pos=s||0}skip(t){let s=this.pos;return this.pos+=t,s}writeU8(t){try{return this.view.setUint8(this.pos,t),this.skip(1)}catch(t){throw console.log({pos:this.pos,err:t}),t}}writeU16(t,s){return this.view.setUint16(this.pos,t,s),this.skip(2)}writeU32(t,s){return this.view.setUint32(this.pos,t,s),this.skip(4)}writeI32(t,s){return this.view.setInt32(this.pos,t,s),this.skip(4)}writeUB64(t,s){return this.view.setBigUint64(this.pos,t,s),this.skip(8)}writeB64(t,s){return this.view.setBigInt64(this.pos,t,s),this.skip(8)}writeF32(t,s){return this.view.setFloat32(this.pos,t,s),this.skip(4)}writeF64(t,s){return this.view.setFloat64(this.pos,t,s),this.skip(8)}}class DataReader{constructor(t,s){this.view=t,this.pos=s||0}skip(t){let s=this.pos;return this.pos+=t,s}readU8(){return this.view.getUint8(this.pos++)}readU16(t){let s=this.view.getUint16(this.pos,t);return this.pos+=2,s}readU32(t){let s=this.view.getUint32(this.pos,t);return this.pos+=4,s}readI32(t){let s=this.view.getInt32(this.pos,t);return this.pos+=4,s}readB64(t){let s=this.view.getBigInt64(this.pos,t);return this.pos+=8,s}readUB64(t){let s=this.view.getBigUint64(this.pos,t);return this.pos+=8,s}readF32(t){let s=this.view.getFloat32(this.pos,t);return this.pos+=4,s}readF64(t){let s=this.view.getFloat64(this.pos,t);return this.pos+=8,s}}